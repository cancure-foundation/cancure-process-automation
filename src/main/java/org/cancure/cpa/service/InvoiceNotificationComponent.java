package org.cancure.cpa.service;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.cancure.cpa.persistence.entity.InvoicesEntity;
import org.cancure.cpa.persistence.entity.Patient;
import org.cancure.cpa.persistence.entity.User;
import org.cancure.cpa.persistence.repository.PatientRepository;
import org.cancure.cpa.persistence.repository.UserRepository;
import org.cancure.cpa.util.Log;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class InvoiceNotificationComponent {
	
	@Autowired
	private UserRepository userRepository;

	@Autowired
	private PatientRepository patientRepo;
	
	@Autowired
	private EmailNotifier emailNotifier;
	
	@Autowired
	private SMSNotifier smsNotifier;
	
	private List<Notifier> taskListeners = new ArrayList<>();
	public InvoiceNotificationComponent(){
		taskListeners.add(emailNotifier);
		taskListeners.add(smsNotifier);
	}

	public void notifySecretary(InvoicesEntity entity, String accountHolderName) {
		Integer pidn = entity.getPidn();
		Set<User> userSet = new HashSet<>();
		Iterable<User> userList = userRepository.findByUserRole("ROLE_SECRETARY");
		for (User u : userList) {
			userSet.add(u);
		}
		
		Patient pat = patientRepo.findByPidn(pidn).get(0);
		String patName = pat.getName();
		
		StringBuilder message = new StringBuilder();
		message.append("<div style='border : 2px solid #f4961c;'>"
                + "<div style='background-color: #f4961c;color: #fff;padding:8px 15px;font-weight:600;'>"
                + "Cancure Foundation</div>"
                + "<div style='padding:15px;color: #222d32;font-weight:500;'> "
                + "Hi, <br><br>"
                + "<b>An invoice has been generated by " + accountHolderName + " to Cancure. </b> <br> <br>"
                + "<table border=1 style='border-collapse: collapse;'>"
                + "<tr>"
                + "<th style='padding:4px 8px;'> PIDN</th>"
                + "<th style='padding:4px 8px;'> Patient Name</th>"
                + "<th style='padding:4px 8px;'> Amount</th>"
                + "<th style='padding:4px 8px;'> Date</th>"
                + "</tr>"
                + "<tr>"
                + "<td style='padding:4px 8px;'>"+ pidn +"</td>"
                + "<td style='padding:4px 8px;'>"+ patName +"</td>"
                + "<td style='padding:4px 8px;'>"+ entity.getAmount() +"</td>"
                + "<td style='padding:4px 8px;'>"+ entity.getDate() +"</td>"
                + "</tr>"
                + "</table><br>"
                + "Visit <a href='www.cancure.in.net'>www.cancure.in.net</a> <br> <br>"
                + "<b>Thanks,</b> <br>"
                + "Admin"
                + "</div>"
                + "</div>");
		
		try {
			sendNotification(userSet, "monisChangeThis", null);
		} catch (Exception e) {
			Log.getLogger().error("Error sending notification", e);
		}
	}

	protected void sendNotification(Set<User> userSet, String messageId, Map<String, Object> values) throws Exception {
		if (taskListeners != null && !taskListeners.isEmpty()) {
			for (Notifier notifier : taskListeners) {
				notifier.notify(userSet, messageId, values);
			}
		}
	}

}
